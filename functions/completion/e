#!/usr/bin/env bash
_enter_dot_file

# This function, kept in ~/usr/bin/functions/completion/, will perform command
# completion for the 'e' command.
# 
# It expects helper functions from the _helper file in the same directory to
# already be loaded.

_e() {
  # Note: when calling 'compgen' in bash, MUST use '[*]' array arg, not '[@]'

  local CMD SEARCH OPTS
  CMD=e
  if [ -d $HOME/usr/bin0 ]; then
    CMD=$HOME/usr/bin0/$CMD
  else
    CMD=$HOME/usr/bin/$CMD
  fi

  # get the valid 1st arument choices
  SEARCH="options"
  OPTS=($($CMD ${SEARCH}))
  # work on 1st argument (i.e. COMP_WORDS with index = 1)
  if ! _isMemberButNotPrefix "${COMP_WORDS[1]}" "${OPTS[@]}"; then
    # first argument not yet valid
    COMPREPLY=($(compgen -W "${OPTS[*]}" "${COMP_WORDS[1]}"))
  else
    # found valid 1st argument, get the valid 2nd arument choices
    SEARCH="${COMP_WORDS[1]}-options"
    OPTS=($($CMD ${SEARCH}))
    # work on 2st argument (i.e. COMP_WORDS with index = 2)
    if ! _isMemberButNotPrefix "${COMP_WORDS[2]}" "${OPTS[@]}"; then
      # 2nd argument not yet valid
      COMPREPLY=($(compgen -W "${OPTS[*]}" "${COMP_WORDS[2]}"))
    else
      # found valid 2nd argument (no 3nd argument choices)
      :
    fi
  fi
}

# register for command completion
complete -F _e e

_leave_dot_file
