#!/usr/bin/env bash
_enter_dot_file

# This function, kept in ~/usr/bin/functions/completion/, will perform command
# completion for the 'o' command.

_o() {
  local cmd=o
  # boilerplate
  local cur prev opts
  COMPREPLY=()
  cur="${COMP_WORDS[COMP_CWORD]}"
  prev="${COMP_WORDS[COMP_CWORD-1]}"

  # call the program to get the options the program takes
  if [ -d $HOME/usr/bin0 ]; then
    opts=$($HOME/usr/bin0/$cmd -?)
  else
    opts=$($HOME/usr/bin/$cmd -?)
  fi

  # commands that take arguments
  case "${prev}" in
   cmd1)   local running=$(echo --one --two --three)
           COMPREPLY=( $(compgen -W "${running}" -- ${cur}) )
           return 0
           ;;
   cmd2)   if [[ ${cur} == -* ]] ; then
              COMPREPLY=( $(compgen -W "${opts}" -- ${cur}) )
              return 0
           fi
           ;;
   *)      ;;
  esac

    COMPREPLY=( $(compgen -W "${opts}" -- ${cur}) )
    return 0
# fi
}

complete -F _o o

# if the script (not the function) returns something to be
# evaluated (like a "chdir", which 'g' does), then uncomment
# the COMMAND() function below to eval that command

#function g() {
#  if [ -d $HOME/usr/bin0 ]; then
#    eval $(~/usr/bin0/g "$@")
#  else
#    eval $(~/usr/bin/g "$@")
#  fi
#}

_leave_dot_file
