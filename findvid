#!/usr/bin/env bash
. ~/.bashrc

usage() {
  (
    if [ -n "$1" ]; then
      echo "x${@}"
    fi
    echo "usage: $(basename $0) [-d] -"
    echo "   or: $(basename $0) [-d] -n"
    echo "   or: $(basename $0) [-d] UID"
    echo "   or: $(basename $0) [-d] <SEARCH_STRING>..."
    echo "       -d  separate results by directory"
    echo "       -   clipboard will hold a string to look for"
    echo "       -n  clipboard will hold a uid-prefix string, and only the uid will be searched for"
  ) | cat 1>&2
  exit 1
}

cleann() {
  # examples that return '665572'
  #cleann '#665572#file.name_HALF_v.mp4'
  #cleann '#665572#'
  #cleann '#665572'
  #cleann '665572'

  #echo "in: cleann $1"  1>&2
  n=${1#\#}
  #echo "n|$n|"  1>&2
  case "$n" in
    [0-9][0-9][0-9][0-9][0-9][0-9]*);;
    *)          usage "ERROR: '$n' is not a 6 digit number";;
  esac
  x=${n#??????}
  n=${n%$x}
  #echo "out: $n" 1>&2
  echo $n
}

cd t:/Premiere.Pro.Work || o bitlocker || exit 1
\ls ./\#* > find 2>/dev/null
dir="t:/RECYCLABLE/v/"
cd $dir || o bitlocker || exit 1

find . -type f > find.txt

if [ "$1" = "-d" ]; then
  separated=true
  shift
fi

if [ "$1" = "" ]; then
  usage
fi

if [ "$1" = '-n' -o "$1" = '-' ]; then
  if [ "$1" = '-n' ]; then
    number_only='true'
  fi
  shift
  if [ $# != 0 ]; then
    usage "ERROR: '-' or '-n' take no additional arguments"
  fi
  set -- $(p)
  if [ $# != 1 ]; then
    usage "ERROR: clipboard contains more than one string!"
  fi
  if [[ ! "$1" =~ ^#?[0-9][0-9][0-9][0-9][0-9][0-9] ]]; then
    if [ "$number_only" = 'true' ]; then
      usage "ERROR: string does not start with a number!"
    fi
  fi
  if [ "$number_only" = 'true' ]; then
    set -- `cleann "$1"`
  fi
fi

#thing="$( echo $num | sed -e 's:[^#]*#::' -e 's:#.*::' -e 's:^:#:' -e 's:$:#:' )"
#set -- $( echo $num | sed -e 's:[^#]*#::' -e 's:#.*::' -e 's:^:#:' -e 's:$:#:' ) ${@}

echo ========================== 1>&2
echo "searching for: \"$@\""  1>&2
echo ========================== 1>&2

args=''
for arg in "$@"; do
  args="${args}(?=.*$arg)"
done

old_d=""

unalias grep 2>/dev/null
if [ "$separated" != true ]; then
  cat find.txt t:/Premiere.Pro.Work/find | egrep -v '(jpg$|txt$|xmp$)' | grep -iP "$args" | grep '.*/' |
    sed -e 's|^\.|t:/RECYCLABLE/v|'
  exit
else
  cat find.txt t:/Premiere.Pro.Work/find | egrep -v '(jpg$|txt$)|xmp$' | grep -iP "$args" | sort |
  sed -e 's|^./|'$dir'|' |
  while read line; do
    f=${line##*/}
    d=${line%$f}
    if [ "$d" != "$old_d" ]; then
      echo '===================================================================='
      echo dd=\"$d\"
      old_d="$d"
    fi
    echo '  start "${dd}/'$f'"'
  done | egrep -i --color "$1|$"
fi
