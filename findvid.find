#!/usr/bin/env ruby

require '~/usr/ruby/lib/dir2.rb'
require '~/usr/ruby/lib/file_symlink'
require 'clipboard' #gem install clipboard

DIR ='t:/RECYCLABLE/v/'

def usage(args = nil)
  name = File.basename(__FILE__)
  STDERR.puts("\n#{args}\n\n") if args != nil
  STDERR.puts "usage: #{name} ...TBD..."
  exit 1
end

if ! Dir.exist?(DIR)
  STDERR.puts "Directory DNE! #{DIR}"
  exit 1
end

def check_quick_swim()
  the = "#{DIR}_QUICK/____/==GEN/@SWIM.IN.OUT"
  if ! Dir.exist?(the)
    the = "#{DIR}_QUICK/____/==GEN/_@SWIM.IN.OUT"
    if ! Dir.exist?(the)
      STDERR.puts "Directory DNE! #{the}"
      exit 1
    end
  end
  Dir.chdir the do
    # check 1
    items = Dir2.glob_i('**/*')
    items.select! do |item|
      ! Dir.exist?(item) && item =~ /\.lnk$/ && item !~ /swimsuit/
    end
    if items.size > 0
      STDERR.puts
      STDERR.puts "ERROR!!"
      STDERR.puts "Found non-'swimsuit' under '#{the}':"
      STDERR.puts
      items.each do |item|
        STDERR.puts "#{the}/#{item}"
      end
      STDERR.puts
      exit 1
    end
    # check 2
    items = Dir2.glob_i('**/*')
    items.select! do |item|
      ! Dir.exist?(item) && item =~ /\.lnk$/ && item =~ /swimout/ && item !~ /outdoors/
    end
    if items.size > 0
      STDERR.puts
      STDERR.puts "ERROR!!"
      STDERR.puts "Found non-'outdoors' under 'swimout' (#{the}):"
      STDERR.puts
      items.each do |item|
        STDERR.puts "#{the}/#{item}"
      end
      STDERR.puts
      exit 1
    end
    # check 3
    items = Dir2.glob_i('**/*')
    items.select! do |item|
      ! Dir.exist?(item) && item =~ /\.lnk$/ && item =~ /outside/
    end
    if items.size > 0
      STDERR.puts
      STDERR.puts "ERROR!!"
      STDERR.puts "Found 'outside' under 'swimout' (#{the}):"
      STDERR.puts
      items.each do |item|
        STDERR.puts "#{the}/#{item}"
      end
      STDERR.puts
      exit 1
    end
  end
end

check_quick_swim

def check_quick_for_nonlinks()
  the = "#{DIR}_QUICK/"
  if ! Dir.exist?(the)
    STDERR.puts "Directory DNE! #{the}"
    exit 1
  end
  Dir.chdir the do
    items = Dir2.glob_i('**/*')
    items.select! do |item|
      # not a directory, and not an allowed file
      ! Dir.exist?(item) && item !~ /\.lnk$|\.jpg$|\.txt$|\.sh$/
    end
    if items.size > 0
      STDERR.puts
      STDERR.puts "SHORTCUT ERROR!!"
      STDERR.puts "Found non .lnk files under #{the}:"
      STDERR.puts
      items.each do |item|
        STDERR.puts "#{the}#{item}"
      end
      STDERR.puts
      exit 1
    end
  end
end

check_quick_for_nonlinks

if ARGV.size != 0
  items = ARGV
else
  #items = Dir2.glob_i('*.lnk')
  Dir.chdir DIR do
    items = Dir2.glob_i('**/*.lnk')
  end
end

#puts "=========================="
#print "searching for: "
#items.each { |i| STDERR.print "#{i} " }
#puts
#puts "=========================="
curdir=Dir2.pwd

Dir.chdir DIR
files = Dir2.all_files_recursively()
files.select! {|i| ! Dir.exist?(i)}
files.map! {|i|"#{DIR}#{i}"}
# puts "#{files.length}"
# reject files of types not interested in
#files.select! {|i| i !~ /lnk$|mp3$|jpg$|jpeg$|txt$|xmp$|png$|sh$|proj$|gif$|url$|tif$|rb$|THM$|AAE$|psd$/i }
 files.select! {|i| i =~ /f4v$|webm$|m2v$|m2t$|flv$|mts$|m4v$|avi$|3gp$|wmv$|mov$|mp4$|mpg$|mpeg$|mkv$/i }

#puts "-----------------"
#puts "#{files.length}"
#puts files
#puts "-----------------"

probs=[]
items.each do |item|
  if item =~ / \([0-9]\).lnk$/ || item =~ / - Copy.lnk$/
    probs << item
  end
end
if probs.size > 0
  STDERR.puts
  STDERR.puts "found problem lnk files ending with /[0-9].lnk#/ or / - Copy.lnk$/:"
  STDERR.puts
  probs.each do |prob|
    STDERR.puts "#{DIR}/#{prob}"
  end
  STDERR.puts
  exit 1
end


#items = ['7.Crazy.Interesting.Facts.About.Sperm.mp4',
#         'bogus']
#files = ['t:/RECYCLABLE/v/AUDIO/advice/7.Crazy.Interesting.Facts.About.Sperm.mp4',
#         't:/RECYCLABLE/v/AUDIO/advice/AWKWARD.MOMENTS.THAT.HAPPEN.ON.YOUR.PERIOD.mp4']

STDERR.puts "lnk files not matching targets:"
items.each do |item|
  item_f=File.basename(item).sub(/.lnk$/,'')
  if item_f !~ /f4v$|webm$|m2v$|m2t$|flv$|mts$|m4v$|avi$|3gp$|wmv$|mov$|mp4$|mpg$|mpeg$|mkv$/i
    # skip lnk files to types we don't care about
    next
  end
  if item_f =~ /^_[0-9][0-9][0-9][0-9][0-9]_/
    #puts "MATCH2: #{item_f}"
    item_f =~ /\/_[0-9][0-9][0-9][0-9][0-9]_/
    item_f = item_f[7..]
  end
  if files.any?{ |s| s[item_f] }
    found=true
  else
    puts "#{DIR}#{item}"
  end
end
