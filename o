#!/usr/bin/env bash
. ~/.bashrc.functions.pc

# This script is symlinked and can be entered as 'o' or 'g':
#   ~/usr/bin/o
#   ~/usr/bin/g
#
# It provides command completion when used in conjuction
#   with ~/usr/bin/functions/completion/[og]
#
# Pass an argument and when runs as
#   'o' it will 'open' the passed argument (a folder or supported program name)
#   'g' will output a 'cd' command for passed arguement (must be a folder)
#       Note: if 'g' gets a non-directory target it will just open it as though called with 'o'
#
# - If no argument is passed in, the clipboard is used as the argument
#
# - when maintaining, add "filter this line out" to any lines that match the grep
#   down on the '-?)' line.  Usually that is any line matching '[a-z0-9])'

if [ "${CYGWIN}" != "" ]; then
  open() {
    case "$1" in
      http*) cmd /c start "${@}";;
      *)     start "$@";;
    esac
  }
  #HOME=c:/users/gsisson
fi

handle_it() {
  cmd=$(basename $0) # filter this line out when run with '-?' (matches on "0)")
  if [ "${CYGWIN}" = "" ]; then
    local clipboard=$( pbpaste )
  else
    local clipboard=$( getclip|d2u )
  fi
  # handle arguments 
  if [ "${1#shell}" != "$@" -o "${1#Microsoft}" != "$@"  ]; then
    # not handling a directory, but a 'shell:' type, or 'Microsoft' type
    if [ "$cmd" = 'g' ]; then
      echo "cannot 'g' to '$@'"     1>&2
      echo "running 'o' instead..." 1>&2
      cmd='o'
      # caller of 'g' is expecting some text to be returned, so echo back a blank line
      echo
    fi
    case "$1" in
      shell*)     echo + explorer "$@" 1>&2
                         explorer "$@"
                  ;;
      Microsoft*) echo + control /name "$@" 1>&2
                         control /name "$@"
                  ;;
    esac
    return
  fi
  # handling a directory directories
  if [ -z "$*" ]; then
    # no argument passed, so maybe a directory is on the clipboard
    #clipboard=$( getclip|d2u )
    if [ -d "$clipboard" ]; then
      set -- "$clipboard"
    else
      # let the user know we looked for a dir on the clipboard
      echo "# clipboard does not hold a directory" 1>&2
    fi
  fi
  if [ -z "$*" ]; then
    # if no directory was passed, nor on the clipboard, that is a usage error
    echo "usage $cmd <directory>" 1>&2
    exit 1
  fi
  #if [ ! -d "$*" ]; then
  #  # if the argument passed was not a directoy, that is an error
  #  echo "ERROR: Directory does not exist: '$@'" 1>&2
  #  exit 1
  #fi
  # now we have a real directory to work with
  case "$cmd" in
    o) # filter this line out when run with '-?' (matches on "o)")
       # the dir comes in as a cygwin dir, but to open it, we need a windows dir 
       if [ "${CYGWIN}" = "" ]; then
         echo + open $windir "$@" 1>&2
         open $windir "$@"
       else
         if [ -d "$*" ]; then
           open $*
         else
           # echo dollar_star::$*::
           windir=$(echo "$*" | sed -e 's|/cygdrive/\(.\)/|\1:/|' -e 's:/:\\:g' ) 
           #case "$windir" in
           #  /home/gsisson*) echo 111;;
           #  c:/users/gsisson*) echo 222;;
           #  *) echo 333;;
           #esac
           echo + explorer $windir 1>&2
           if [ ! -d "$windir" ]; then
             echo "DNE: $windir"
           else
             explorer $windir
           fi
         fi
       fi
       ;;
    g) echo "cd '$*'";; # filter this line out when run with '-?' (matches on "g)")
  esac
}

# - Here we translate supported 'shorthand' arguements for real directories or programs
#   that are hard to remember
# - Add more entries to the 'case' to handle new shorthands
# - Any argument that isn't a shorthand is handed by the final '*' case (specific directories
#   or something passed in on the clipboard

desktop_pictures_locn="$HOME/AppData/Local/Packages/Microsoft.Windows."
desktop_pictures_locn="${desktop_pictures_locn}ContentDeliveryManager_cw5n1h2txyewy/LocalState/Assets"

case "$@" in
  # '-?' provides help by returning a list of supported shorthands.
  # This argument is used by ~/usr/completion/[og] to get command completion for shortcuts
  -?) cat $0 | grep -v 'filter this line out' |
      grep -v '^ *#' | grep '[a-zA-Z0-9])' |
      sed -e 's:).*::' -e 's:^  ::' | column;;
  e)                   edit "$0";; # filter this line out when run with '-?' (avoid clutter)
  # executable shorthands that can be 'opened'
 #blinds)              "C:/Program Files (x86)/Stardock/WindowBlinds/WB10Config.exe" "$@" &;;
  photoshop|ps)        shift; /home/gsisson/usr/bin/adobe "$@";;
  premiere.pro|pp)     shift; /home/gsisson/usr/bin/pp    "$@";;
  firefox)             if [ "${CYGWIN}" = "" ]; then
                         echo "fix $0 for mac"
                       else
                         cmd /c "C:/Program Files/Mozilla Firefox/firefox.exe"
                       fi;;
  screensaver)         control "desk.cpl,,@screensaver";;
  bitlocker)           handle_it Microsoft.BitLockerDriveEncryption;;
  #                    alternative: manage-bde -unlock t: -password # must be admin!
  controller)          handle_it "shell:::{A8A91A66-3A7D-4424-8D24-04E180695C7A}";;
  browser)             handle_it 'C:\cygwin64\home\gsisson\usr\src\DotNet\c#\Browser\Browser.sln';;
  # folder shorthands that can be 'opened'
 #anki)                open "$HOME/Library/Application Support/Anki2/";;
  browser)             open "$HOME/usr/src/DotNet/c#/Browser/";;
  g|o)                 open "$HOME/usr/bin/functions/completion";;
  auto_hot_key)        open "$HOME/usr/bin/config/";;
  cloud)               if [ "${CYGWIN}" = "" ]; then
                         open "$HOME/Dropbox/"
                       else
                         open "$HOME/Documents/Cloud"
                       fi;;
  data)                handle_it "C:/users/gsisson/Documents/HOME/DATA";;
  dropbox)             if [ "${CYGWIN}" = "" ]; then
                         handle_it "$HOME/Documents/Cloud/Dropbox"
                       else
                         handle_it "C:\Users\gsisson\Dropbox"
                       fi;;
  downloads)           if [ "${CYGWIN}" = "" ]; then
                         handle_it "$HOME/Downloads"
                       else
                         handle_it shell:Downloads #"C:\Users\gsisson\Downloads"
                       fi;;
  home)                if [ "${CYGWIN}" = "" ]; then
                         handle_it "$HOME"
                       else
                         handle_it "C:\Users\gsisson"
                       fi;;
  links)               handle_it "$HOME/usr/local/pc/lnk/";;
  movies)              handle_it "C:/___MOVIES_C/";;
  photos)              if [ "${CYGWIN}" = "" ]; then
                         echo "fix $0 for mac"
                       else
                         handle_it "shell:My Pictures"
                       fi;;
  pics.MY)             handle_it "shell:My Pictures";; # "C:/Users/gsisson/Pictures/";;
  pics.P)              handle_it "P:/Photos";;
  pics.rotate)         handle_it "P:/Photos/My_Pictures_ToRotate";;
  pics.scan)           handle_it "P:/Photos/My_Pictures_Scan_In";;
  audiobooks)          handle_it "P:/Audio.Books/";;
  humor)               handle_it "P:/Audio.Books/";;
  room)                open $HOME/Documents/HOME/*stat*/*05*/*en*;;
  sysinternals)        handle_it "$HOME/usr/local/SysInternals/";;
  video)               handle_it "P:/Videos/";;
  video.marker)        efile "/cygwin64/home/gsisson/usr/local/video.marker/index.html";;
  # places (executabl  es that are kind of like folders)
  diskmgmt)            open "C:/Windows/System32/diskmgmt.msc";;
  computer|pc)         handle_it "shell:MyComputerFolder";;
  control.panel.folder)  handle_it "shell:ControlPanelFolder";;
  control.panel.options) handle_it "shell:::{ED7BA470-8E54-465E-825C-99712043E01C}";;
  device.mgr)          echo "look under Devices-and-Printers/Device-Manager"
                       echo "           -----------------------------------"
                       handle_it "shell:::{ED7BA470-8E54-465E-825C-99712043E01C}";;

  desktop.pub)         handle_it "shell:Common Desktop";;
  desktop)             if [ "${CYGWIN}" = "" ]; then
                         handle_it "$HOME/Desktop"
                       else
                         #shell:Desktop (weird 'HOME')
                         #handle_it "C:\Users\gsisson\Desktop" # nope... goes to /c/users/gsisson/Desktop
                         handle_it "C:\Users\gsisson\Desktop"
                       fi;;
  documents.pub)       handle_it "shell:Common Documents";;
  documents)           handle_it "shell:Documents";; # shell:Local Documents (same place)
 #libraries)           handle_it "shell:Libraries";;
  tabimages)           handle_it "C:/Users/gsisson/Desktop/tabimages";;
  music)               handle_it "C:\Users\gsisson\Dropbox\Music";;
  music.MY)            handle_it "shell:My Music";;
  music.to.get)        handle_it "C:\Users\gsisson\Dropbox\Music\Music.To.Get";;
  music.to.store)      handle_it "C:/Users/gsisson/Dropbox/Music/Music.Ready.to.Store";;
 #pinned)              handle_it "shell:User Pinned";;
 #playlists)           handle_it "shell:Playlists";;
  printers)            handle_it "shell:PrintersFolder";;
 #quick.launch)        handle_it "shell:Quick Launch";;
  phone)               handle_it "T:/_IMAGES.FOR.PHONE";;
  ringtones)           handle_it "C:\Users\gsisson\Dropbox\Music\Music.Ringtones";;
  recycle)             if [ "${CYGWIN}" = "" ]; then
                         handle_it "$HOME/Recycle"
                       else
                         handle_it "shell:RecycleBinFolder"
                       fi;;
  screenshots)         if [ "${CYGWIN}" = "" ]; then
                         handle_it "$HOME/Desktop/Screenshots"
                       else
                         #handle_it "shell:ScreenShots"
                         open "C:\Users\gsisson\Pictures\Screenshots"
                       fi;;
  sendto)              open "c:/users/gsisson/AppData/Roaming/Microsoft/Windows/SendTo";;
                      #handle_it "shell:SendTo";; # doesn't work in Win11
 #sendto.pub)          handle_it "shell:Common SendTo";;
  startmenu.pub)       handle_it "shell:Common Start Menu";;
  startmenu)           handle_it "shell:Start Menu";;
  startup.pub)         handle_it "shell:Common Startup";;
  startup)            #handle_it "shell:Startup";; # doesn't work in Win11
                       handle_it "$HOME\AppData\Roaming\Microsoft\Windows\Start Menu\Programs\Startup";;
  firefox-hide-tabtree) handle_it "C:\Users\gsisson\AppData\Roaming\Mozilla\Firefox\Profiles\vl9mtsgc.default-release\chrome";;
  mintty)              open "$HOME/usr/local/pc/lnk/";;
# control
  tax)                 open "T:/data/taxes-glenn/202X/2024";;
  shell-colon-options) echo "https://ss64.com/nt/shell.html"
                       echo "------------------------------"
                       wget -O - "https://ss64.com/nt/shell.html" | grep '>shell:.*</td>' | sed -e 's:.*shell:shell:' -e 's:<.*::';;
  *)                   handle_it "$*";;
esac
