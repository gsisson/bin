#!/usr/bin/env bash

# these can be find in the registry in
#   HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\FolderDescriptions\{****-****}

# set -- "${1,,}"

cmd=$(basename $0)

OS=$(uname)

open_it() {
  if [ $OS = Darwin ]; then
    local clipboard=$( pbpaste )
  else
    local clipboard=$( getclip|d2u )
  fi
  if [ "${1#shell}" != "$@" -o "${1#Microsoft}" != "$@"  ]; then
    # not handling a directory, but a 'shell:' type, or 'Microsoft' type
    if [ "$cmd" = 'g' ]; then
      echo "cannot 'g' to '$@'" 1>&2
      echo "running 'o' instead..." 1>&2
      cmd='o'
      # caller of 'g' is expecting some text to be returned, so echo a blank line
      echo
    fi
    case "$1" in
      shell*)     echo + explorer "$@" 1>&2
                         explorer "$@"
                  ;;
      Microsoft*) echo + control /name "$@" 1>&2
                         control /name "$@"
                  ;;
    esac
    return
  fi
  # handling a directory directories
  if [ -z "$*" ]; then
    # no argument passed, so maybe a directory is on the clipboard
    clipboard=$( getclip|d2u )
    if [ -d "$clipboard" ]; then
      set -- "$clipboard"
    else
      # let the user know we looked for a dir on the clipboard
      echo "# clipboard does not hold a directory" 1>&2
    fi
  fi
  if [ -z "$*" ]; then
    # if no directory was passed, nor on the clipboard, that is a usage error
    echo "usage $cmd <directory>" 1>&2
    exit 1
  fi
  if [ ! -d "$*" ]; then
    # if the argument passed was not a directoy, that is an error
    echo "ERROR: Directory does not exist: '$@'" 1>&2
    exit 1
  fi
  # now we have a real directory to work with
  case "$cmd" in
    o) # filter this line out, when run with '-?'
       # the dir comes in as a cygwin dir, but to open it, we need a windows dir 
       if [ $OS = Darwin ]; then
         echo + open $windir $@ 1>&2
         open $windir $@
       else
         windir=$(echo "$*" | sed -e 's|/cygdrive/\(.\)/|\1:/|' -e 's:/:\\:g' ) 
         echo + explorer $windir 1>&2
         explorer $windir
       fi
       ;;
    g) echo "cd '$*'";; # filter this line out, when run with '-?'
  esac
}

case "$@" in
  # executables
  blinds)           "C:/Program Files (x86)/Stardock/WindowBlinds/WB10Config.exe" "$@" &;;
  photoshop)        shift; $HOME/usr/bin/adobe "$@";;
  premiere.pro)     shift; $HOME/usr/bin/pp    "$@";;
  # web pages
  tix)              echo 'no';;
                    #cmd /c "start https://tpb.cool/";;
                    #tpb.cool
                    #piratebay.icu
                    #thepiratebay.icu
                    #proxybay.live
                    #pirateproxy.wtf
                    #piratebay.life
                    #thepiratebay.fail
                    #thepiratebay.fyi
                    #piratebay.tech
                    #thepirate.live
                    #thepirate.fun
                    #thepirate.host
                    #thepiratebay.org/search/The%20Fourth%20Estate/0/99/0
  tix2)             echo 'no';;
                    #cmd /c "start https://zooqle.com/search?q=the+clinton+affair";;
  # folders
  auto_hot_key)     open_it "$HOME/usr/bin/config/";;
  cloud)            if [ $OS = Darwin ]; then
                      open_it "$HOME/Dropbox/"
                    else
                      open_it "$HOME/Documents/Cloud"
                    fi
                    ;;
  dropbox)          open_it "$HOME/Documents/Cloud/Dropbox";;
  diskmgmt)         cmd /c "C:/Windows/System32/diskmgmt.msc";;
  downloads)        open_it "$HOME/Downloads";;
  home)             open_it "$HOME";;
  links)            open_it "$HOME/usr/bin0/pc/lnk/";;
  movies)           open_it "C:/_MOVIES_C/";;
  photos)           open_it "P:/";;
  room)             open_it $HOME/Documents/HOME/Real\ Estate/2005*/Room.For.Rent;;
  rotate)           open_it "p:/My_Pictures_ToRotate";;
  scan)             open_it "p:/My_Pictures_Scan_In";;
  screensaver)      control "desk.cpl,,@screensaver";;
  sysinternals)     open_it "$HOME/usr/bin0/pc/SysInternals/";;
  tapes)            open_it "V:/_VIDEO.CAPTURE.WORK_";;
  video)            open_it "V:/";;
  video.marker)     open_it $HOME/usr/bin0/video.marker/;;
  # places
  bitlocker)        open_it Microsoft.BitLockerDriveEncryption;;
  computer)         open_it "shell:MyComputerFolder";;
  control.panel)    open_it "shell:ControlPanelFolder";;
  desktop)          open_it "shell:Desktop";;
  desktop.common)   open_it "shell:Common Desktop";;
# desktop.folder)   open_it "shell:ThisPCDesktopFolder";;
  documents)        open_it "shell:Documents";;
# documents.local)  open_it "shell:Local Documents";;
  documents.common) open_it "shell:Common Documents";;
  libraries)        open_it "shell:Libraries";;
  music)            open_it "shell:My Music";;
  photos.pc)        open_it "shell:My Pictures";;
  pictures)         open_it "shell:My Pictures";;
  pictures.desktop) open_it "c:/Users/gsisson/AppData/Local/Packages/Microsoft.Windows.ContentDeliveryManager_cw5n1h2txyewy/LocalState/Assets";;
  pinned)           open_it "shell:User Pinned";;
  playlists)        open_it "shell:Playlists";;
  printers)         open_it "shell:PrintersFolder";;
  quick.launch)     open_it "shell:Quick Launch";;
  recycle)          open_it "shell:RecycleBinFolder";;
# screenshots)      open_it "shell:ScreenShots";;
  sendto)           open_it "shell:SendTo";;
  startmenu)        open_it "shell:Start Menu";;
  startmenu.common) open_it "shell:Common Start Menu";;
  startup)          open_it "shell:Startup";;
  startup.common)   open_it "shell:Common Startup";;
  -?)               cat $0 | grep -v '#' | grep '[a-z])' |
                    sed -e 's:).*::' -e 's:^  ::' | column;;
  *)                open_it "$*";; # filter this line out, when run with '-?'
esac
