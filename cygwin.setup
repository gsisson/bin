#!/bin/sh
. ~/.bashrc

cd "$HOME/Downloads/c/Cygwin/"
pwd

f="setup-x86_64.exe"

stop_for_administrator() {
  echo "STOPPING..."
  echo "  newly downloaded \"${f}\" file must be changed to run \"as administrator\""
  echo "  after editting that property on the .exe, re-run this script to use it."
  echo "  (start \"$HOME/downloads/c/Cygwin/\")"
  open .
  exit 1
}

for file in $f ${f}.downloaded ${f}.bak
do
  if [ -f "$file" ]; then
    echo "# exist: $file"
  else
    echo "# DNE:   $file"
  fi
done

older_than_7_days=0
if [ -f $f ]; then
  older_than_7_days=$(find ${f} -ctime +7 -exec ls {} \; | wc -l)
  older_than_7_days=$(find ${f} -type f -mtime +7 -exec ls {} \; | wc -l)
  if [ "$older_than_7_days" = 1 ]; then
    echo "# existing $f is older than 7 days"
  fi
fi

if [ ! -f $f -o "$older_than_7_days" = 1 ]; then
  echo "# running wget..."
  echo wget --output-document=${f}.download www.cygwin.com/${f}
  wget --output-document=${f}.download www.cygwin.com/${f} > /dev/null 2>&1
  if [ $? != 0 ]; then
    echo "#   wget failed!"
    if [ ! -f $f ]; then
      echo "ERROR: cannot download latest cygwin $f file"
      exit 1
    else
      echo "WARNING: cannot download latest cygwin $f file"
      echo "         continuing using existing one..."
    fi
  else
    echo "# wget success"
  fi
  if [ ! -f $f -a -f ${f}.download ]; then
    echo + mv ${f}.download ${f}
           mv ${f}.download ${f}
    # set the date to today's date, so we can age it properly
    touch ${f}
    stop_for_administrator
  fi
fi

if [ -f $f -a -f ${f}.download ]; then
  if cmp ${f} ${f}.download > /dev/null
  then
    echo "# no problem, the downloaded file is the same"
    # touch it so it will be good for another 7 days
    touch -amc ${f}.download
  else
    echo "# the downloaded file is newer, so we'll use it"
    echo rm -f            ${f}.bak
         rm -f            ${f}.bak
    echo mv ${f}          ${f}.bak
         mv ${f}          ${f}.bak
    echo mv ${f}.download ${f}
         mv ${f}.download ${f}
    stop_for_administrator
  fi
fi

echo + start ./${f}
start ./${f}
